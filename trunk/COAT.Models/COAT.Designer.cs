//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("COATModel", "FK_ApprovalHistory_DealProduct", "DealProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(COAT.Models.DealProduct), "ApprovalHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.ApprovalHistory), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_ModifiedHistory_DealProduct", "DealProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(COAT.Models.DealProduct), "ModifiedHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.ModifiedHistory), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_Contract_FileStore", "FileStore", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(COAT.Models.FileStore), "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.Contract), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_DealContract_Contract", "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(COAT.Models.Contract), "DealContract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.DealContract), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_ApprovalHistory_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(COAT.Models.User), "ApprovalHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.ApprovalHistory), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_User_BusinessRole", "BusinessRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(COAT.Models.BusinessRole), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.User), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_ModifiedHistory_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(COAT.Models.User), "ModifiedHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.ModifiedHistory), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_User_SystemRole", "SystemRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(COAT.Models.SystemRole), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.User), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_ApprovalHistory_Deal", "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(COAT.Models.Deal), "ApprovalHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.ApprovalHistory), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_Deal_Customer", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(COAT.Models.Customer), "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.Deal), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_Deal_Approver", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(COAT.Models.User), "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.Deal), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_Deal_DealProduct", "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(COAT.Models.Deal), "DealProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.DealProduct), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_Deal_Industry", "Industry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(COAT.Models.Industry), "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.Deal), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_Deal_Industry2", "Industry2", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(COAT.Models.Industry2), "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.Deal), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_Deal_Notifier", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(COAT.Models.User), "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.Deal), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_Deal_Partner", "Partner", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(COAT.Models.Partner), "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.Deal), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_Deal_Province", "Province", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(COAT.Models.Province), "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.Deal), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_Deal_SFDCStatus", "SFDCStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(COAT.Models.SFDCStatus), "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.Deal), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_Deal_Specialization", "Specialization", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(COAT.Models.Specialization), "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.Deal), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_Deal_Status", "Status", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(COAT.Models.Status), "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.Deal), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_DealContract_Deal", "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(COAT.Models.Deal), "DealContract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.DealContract), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_ModifiedHistory_Deal", "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(COAT.Models.Deal), "ModifiedHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.ModifiedHistory), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_Deal_Deal", "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(COAT.Models.Deal), "Deal1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(COAT.Models.Deal), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_Deal_Assigner", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(COAT.Models.User), "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.Deal), true)]
[assembly: EdmRelationshipAttribute("COATModel", "FK_Deal_Director", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(COAT.Models.User), "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(COAT.Models.Deal), true)]

#endregion

namespace COAT.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class COATEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new COATEntities object using the connection string found in the 'COATEntities' section of the application configuration file.
        /// </summary>
        public COATEntities() : base("name=COATEntities", "COATEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new COATEntities object.
        /// </summary>
        public COATEntities(string connectionString) : base(connectionString, "COATEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new COATEntities object.
        /// </summary>
        public COATEntities(EntityConnection connection) : base(connection, "COATEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApprovalHistory> ApprovalHistories
        {
            get
            {
                if ((_ApprovalHistories == null))
                {
                    _ApprovalHistories = base.CreateObjectSet<ApprovalHistory>("ApprovalHistories");
                }
                return _ApprovalHistories;
            }
        }
        private ObjectSet<ApprovalHistory> _ApprovalHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BusinessRole> BusinessRoles
        {
            get
            {
                if ((_BusinessRoles == null))
                {
                    _BusinessRoles = base.CreateObjectSet<BusinessRole>("BusinessRoles");
                }
                return _BusinessRoles;
            }
        }
        private ObjectSet<BusinessRole> _BusinessRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Industry> Industries
        {
            get
            {
                if ((_Industries == null))
                {
                    _Industries = base.CreateObjectSet<Industry>("Industries");
                }
                return _Industries;
            }
        }
        private ObjectSet<Industry> _Industries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ModifiedHistory> ModifiedHistories
        {
            get
            {
                if ((_ModifiedHistories == null))
                {
                    _ModifiedHistories = base.CreateObjectSet<ModifiedHistory>("ModifiedHistories");
                }
                return _ModifiedHistories;
            }
        }
        private ObjectSet<ModifiedHistory> _ModifiedHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Partner> Partners
        {
            get
            {
                if ((_Partners == null))
                {
                    _Partners = base.CreateObjectSet<Partner>("Partners");
                }
                return _Partners;
            }
        }
        private ObjectSet<Partner> _Partners;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Status> Status
        {
            get
            {
                if ((_Status == null))
                {
                    _Status = base.CreateObjectSet<Status>("Status");
                }
                return _Status;
            }
        }
        private ObjectSet<Status> _Status;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SystemRole> SystemRoles
        {
            get
            {
                if ((_SystemRoles == null))
                {
                    _SystemRoles = base.CreateObjectSet<SystemRole>("SystemRoles");
                }
                return _SystemRoles;
            }
        }
        private ObjectSet<SystemRole> _SystemRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserView> UserViews
        {
            get
            {
                if ((_UserViews == null))
                {
                    _UserViews = base.CreateObjectSet<UserView>("UserViews");
                }
                return _UserViews;
            }
        }
        private ObjectSet<UserView> _UserViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customer> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customer>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customer> _Customers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Industry2> Industry2
        {
            get
            {
                if ((_Industry2 == null))
                {
                    _Industry2 = base.CreateObjectSet<Industry2>("Industry2");
                }
                return _Industry2;
            }
        }
        private ObjectSet<Industry2> _Industry2;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DealProduct> DealProducts
        {
            get
            {
                if ((_DealProducts == null))
                {
                    _DealProducts = base.CreateObjectSet<DealProduct>("DealProducts");
                }
                return _DealProducts;
            }
        }
        private ObjectSet<DealProduct> _DealProducts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ORPType> ORPTypes
        {
            get
            {
                if ((_ORPTypes == null))
                {
                    _ORPTypes = base.CreateObjectSet<ORPType>("ORPTypes");
                }
                return _ORPTypes;
            }
        }
        private ObjectSet<ORPType> _ORPTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Region> Regions
        {
            get
            {
                if ((_Regions == null))
                {
                    _Regions = base.CreateObjectSet<Region>("Regions");
                }
                return _Regions;
            }
        }
        private ObjectSet<Region> _Regions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Setting> Settings
        {
            get
            {
                if ((_Settings == null))
                {
                    _Settings = base.CreateObjectSet<Setting>("Settings");
                }
                return _Settings;
            }
        }
        private ObjectSet<Setting> _Settings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SFDCStatus> SFDCStatus
        {
            get
            {
                if ((_SFDCStatus == null))
                {
                    _SFDCStatus = base.CreateObjectSet<SFDCStatus>("SFDCStatus");
                }
                return _SFDCStatus;
            }
        }
        private ObjectSet<SFDCStatus> _SFDCStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Specialization> Specializations
        {
            get
            {
                if ((_Specializations == null))
                {
                    _Specializations = base.CreateObjectSet<Specialization>("Specializations");
                }
                return _Specializations;
            }
        }
        private ObjectSet<Specialization> _Specializations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NameAccount> NameAccounts
        {
            get
            {
                if ((_NameAccounts == null))
                {
                    _NameAccounts = base.CreateObjectSet<NameAccount>("NameAccounts");
                }
                return _NameAccounts;
            }
        }
        private ObjectSet<NameAccount> _NameAccounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExcutivedDeal> ExcutivedDeals
        {
            get
            {
                if ((_ExcutivedDeals == null))
                {
                    _ExcutivedDeals = base.CreateObjectSet<ExcutivedDeal>("ExcutivedDeals");
                }
                return _ExcutivedDeals;
            }
        }
        private ObjectSet<ExcutivedDeal> _ExcutivedDeals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Province> Provinces
        {
            get
            {
                if ((_Provinces == null))
                {
                    _Provinces = base.CreateObjectSet<Province>("Provinces");
                }
                return _Provinces;
            }
        }
        private ObjectSet<Province> _Provinces;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImportTask> ImportTasks
        {
            get
            {
                if ((_ImportTasks == null))
                {
                    _ImportTasks = base.CreateObjectSet<ImportTask>("ImportTasks");
                }
                return _ImportTasks;
            }
        }
        private ObjectSet<ImportTask> _ImportTasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FileStore> FileStores
        {
            get
            {
                if ((_FileStores == null))
                {
                    _FileStores = base.CreateObjectSet<FileStore>("FileStores");
                }
                return _FileStores;
            }
        }
        private ObjectSet<FileStore> _FileStores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DealProductDetailsView> DealProductDetailsViews
        {
            get
            {
                if ((_DealProductDetailsViews == null))
                {
                    _DealProductDetailsViews = base.CreateObjectSet<DealProductDetailsView>("DealProductDetailsViews");
                }
                return _DealProductDetailsViews;
            }
        }
        private ObjectSet<DealProductDetailsView> _DealProductDetailsViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DealSizeView> DealSizeViews
        {
            get
            {
                if ((_DealSizeViews == null))
                {
                    _DealSizeViews = base.CreateObjectSet<DealSizeView>("DealSizeViews");
                }
                return _DealSizeViews;
            }
        }
        private ObjectSet<DealSizeView> _DealSizeViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PendingSalesApproveDealsView> PendingSalesApproveDealsViews
        {
            get
            {
                if ((_PendingSalesApproveDealsViews == null))
                {
                    _PendingSalesApproveDealsViews = base.CreateObjectSet<PendingSalesApproveDealsView>("PendingSalesApproveDealsViews");
                }
                return _PendingSalesApproveDealsViews;
            }
        }
        private ObjectSet<PendingSalesApproveDealsView> _PendingSalesApproveDealsViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PendingSalesAssignDealsView> PendingSalesAssignDealsViews
        {
            get
            {
                if ((_PendingSalesAssignDealsViews == null))
                {
                    _PendingSalesAssignDealsViews = base.CreateObjectSet<PendingSalesAssignDealsView>("PendingSalesAssignDealsViews");
                }
                return _PendingSalesAssignDealsViews;
            }
        }
        private ObjectSet<PendingSalesAssignDealsView> _PendingSalesAssignDealsViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesApprovedDealsView> SalesApprovedDealsViews
        {
            get
            {
                if ((_SalesApprovedDealsViews == null))
                {
                    _SalesApprovedDealsViews = base.CreateObjectSet<SalesApprovedDealsView>("SalesApprovedDealsViews");
                }
                return _SalesApprovedDealsViews;
            }
        }
        private ObjectSet<SalesApprovedDealsView> _SalesApprovedDealsViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesDealsView> SalesDealsViews
        {
            get
            {
                if ((_SalesDealsViews == null))
                {
                    _SalesDealsViews = base.CreateObjectSet<SalesDealsView>("SalesDealsViews");
                }
                return _SalesDealsViews;
            }
        }
        private ObjectSet<SalesDealsView> _SalesDealsViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contract> Contracts
        {
            get
            {
                if ((_Contracts == null))
                {
                    _Contracts = base.CreateObjectSet<Contract>("Contracts");
                }
                return _Contracts;
            }
        }
        private ObjectSet<Contract> _Contracts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DealContract> DealContracts
        {
            get
            {
                if ((_DealContracts == null))
                {
                    _DealContracts = base.CreateObjectSet<DealContract>("DealContracts");
                }
                return _DealContracts;
            }
        }
        private ObjectSet<DealContract> _DealContracts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Deal> Deals
        {
            get
            {
                if ((_Deals == null))
                {
                    _Deals = base.CreateObjectSet<Deal>("Deals");
                }
                return _Deals;
            }
        }
        private ObjectSet<Deal> _Deals;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApprovalHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApprovalHistories(ApprovalHistory approvalHistory)
        {
            base.AddObject("ApprovalHistories", approvalHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BusinessRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBusinessRoles(BusinessRole businessRole)
        {
            base.AddObject("BusinessRoles", businessRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Industries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIndustries(Industry industry)
        {
            base.AddObject("Industries", industry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ModifiedHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModifiedHistories(ModifiedHistory modifiedHistory)
        {
            base.AddObject("ModifiedHistories", modifiedHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Partners EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPartners(Partner partner)
        {
            base.AddObject("Partners", partner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Status EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatus(Status status)
        {
            base.AddObject("Status", status);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SystemRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSystemRoles(SystemRole systemRole)
        {
            base.AddObject("SystemRoles", systemRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserViews(UserView userView)
        {
            base.AddObject("UserViews", userView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomers(Customer customer)
        {
            base.AddObject("Customers", customer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Industry2 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIndustry2(Industry2 industry2)
        {
            base.AddObject("Industry2", industry2);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DealProducts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDealProducts(DealProduct dealProduct)
        {
            base.AddObject("DealProducts", dealProduct);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ORPTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToORPTypes(ORPType oRPType)
        {
            base.AddObject("ORPTypes", oRPType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Regions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegions(Region region)
        {
            base.AddObject("Regions", region);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Settings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSettings(Setting setting)
        {
            base.AddObject("Settings", setting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SFDCStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSFDCStatus(SFDCStatus sFDCStatus)
        {
            base.AddObject("SFDCStatus", sFDCStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Specializations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpecializations(Specialization specialization)
        {
            base.AddObject("Specializations", specialization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NameAccounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNameAccounts(NameAccount nameAccount)
        {
            base.AddObject("NameAccounts", nameAccount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExcutivedDeals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExcutivedDeals(ExcutivedDeal excutivedDeal)
        {
            base.AddObject("ExcutivedDeals", excutivedDeal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Provinces EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProvinces(Province province)
        {
            base.AddObject("Provinces", province);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImportTasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImportTasks(ImportTask importTask)
        {
            base.AddObject("ImportTasks", importTask);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FileStores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFileStores(FileStore fileStore)
        {
            base.AddObject("FileStores", fileStore);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DealProductDetailsViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDealProductDetailsViews(DealProductDetailsView dealProductDetailsView)
        {
            base.AddObject("DealProductDetailsViews", dealProductDetailsView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DealSizeViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDealSizeViews(DealSizeView dealSizeView)
        {
            base.AddObject("DealSizeViews", dealSizeView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PendingSalesApproveDealsViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPendingSalesApproveDealsViews(PendingSalesApproveDealsView pendingSalesApproveDealsView)
        {
            base.AddObject("PendingSalesApproveDealsViews", pendingSalesApproveDealsView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PendingSalesAssignDealsViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPendingSalesAssignDealsViews(PendingSalesAssignDealsView pendingSalesAssignDealsView)
        {
            base.AddObject("PendingSalesAssignDealsViews", pendingSalesAssignDealsView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesApprovedDealsViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesApprovedDealsViews(SalesApprovedDealsView salesApprovedDealsView)
        {
            base.AddObject("SalesApprovedDealsViews", salesApprovedDealsView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesDealsViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesDealsViews(SalesDealsView salesDealsView)
        {
            base.AddObject("SalesDealsViews", salesDealsView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contracts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContracts(Contract contract)
        {
            base.AddObject("Contracts", contract);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DealContracts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDealContracts(DealContract dealContract)
        {
            base.AddObject("DealContracts", dealContract);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Deals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeals(Deal deal)
        {
            base.AddObject("Deals", deal);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="ApprovalHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApprovalHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApprovalHistory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="comment">Initial value of the Comment property.</param>
        /// <param name="dateTime">Initial value of the DateTime property.</param>
        public static ApprovalHistory CreateApprovalHistory(global::System.Int32 id, global::System.String type, global::System.Int32 userId, global::System.String comment, global::System.DateTime dateTime)
        {
            ApprovalHistory approvalHistory = new ApprovalHistory();
            approvalHistory.Id = id;
            approvalHistory.Type = type;
            approvalHistory.UserId = userId;
            approvalHistory.Comment = comment;
            approvalHistory.DateTime = dateTime;
            return approvalHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DealId
        {
            get
            {
                return _DealId;
            }
            set
            {
                OnDealIdChanging(value);
                ReportPropertyChanging("DealId");
                _DealId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DealId");
                OnDealIdChanged();
            }
        }
        private global::System.String _DealId;
        partial void OnDealIdChanging(global::System.String value);
        partial void OnDealIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DealProductId
        {
            get
            {
                return _DealProductId;
            }
            set
            {
                OnDealProductIdChanging(value);
                ReportPropertyChanging("DealProductId");
                _DealProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealProductId");
                OnDealProductIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DealProductId;
        partial void OnDealProductIdChanging(Nullable<global::System.Int32> value);
        partial void OnDealProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTime
        {
            get
            {
                return _DateTime;
            }
            set
            {
                OnDateTimeChanging(value);
                ReportPropertyChanging("DateTime");
                _DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTime");
                OnDateTimeChanged();
            }
        }
        private global::System.DateTime _DateTime;
        partial void OnDateTimeChanging(global::System.DateTime value);
        partial void OnDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_ApprovalHistory_DealProduct", "DealProduct")]
        public DealProduct DealProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealProduct>("COATModel.FK_ApprovalHistory_DealProduct", "DealProduct").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealProduct>("COATModel.FK_ApprovalHistory_DealProduct", "DealProduct").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DealProduct> DealProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealProduct>("COATModel.FK_ApprovalHistory_DealProduct", "DealProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DealProduct>("COATModel.FK_ApprovalHistory_DealProduct", "DealProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_ApprovalHistory_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("COATModel.FK_ApprovalHistory_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("COATModel.FK_ApprovalHistory_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("COATModel.FK_ApprovalHistory_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("COATModel.FK_ApprovalHistory_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_ApprovalHistory_Deal", "Deal")]
        public Deal Deal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("COATModel.FK_ApprovalHistory_Deal", "Deal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("COATModel.FK_ApprovalHistory_Deal", "Deal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Deal> DealReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("COATModel.FK_ApprovalHistory_Deal", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Deal>("COATModel.FK_ApprovalHistory_Deal", "Deal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="BusinessRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BusinessRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BusinessRole object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static BusinessRole CreateBusinessRole(global::System.Int32 id, global::System.String name)
        {
            BusinessRole businessRole = new BusinessRole();
            businessRole.Id = id;
            businessRole.Name = name;
            return businessRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_User_BusinessRole", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("COATModel.FK_User_BusinessRole", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("COATModel.FK_User_BusinessRole", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="Contract")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contract : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contract object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fileStoreId">Initial value of the FileStoreId property.</param>
        public static Contract CreateContract(global::System.Int32 id, global::System.Int32 fileStoreId)
        {
            Contract contract = new Contract();
            contract.Id = id;
            contract.FileStoreId = fileStoreId;
            return contract;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileStoreId
        {
            get
            {
                return _FileStoreId;
            }
            set
            {
                OnFileStoreIdChanging(value);
                ReportPropertyChanging("FileStoreId");
                _FileStoreId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileStoreId");
                OnFileStoreIdChanged();
            }
        }
        private global::System.Int32 _FileStoreId;
        partial void OnFileStoreIdChanging(global::System.Int32 value);
        partial void OnFileStoreIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Contract_FileStore", "FileStore")]
        public FileStore FileStore
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileStore>("COATModel.FK_Contract_FileStore", "FileStore").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileStore>("COATModel.FK_Contract_FileStore", "FileStore").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileStore> FileStoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileStore>("COATModel.FK_Contract_FileStore", "FileStore");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileStore>("COATModel.FK_Contract_FileStore", "FileStore", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_DealContract_Contract", "DealContract")]
        public EntityCollection<DealContract> DealContracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DealContract>("COATModel.FK_DealContract_Contract", "DealContract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DealContract>("COATModel.FK_DealContract_Contract", "DealContract", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Customer CreateCustomer(global::System.Int32 id)
        {
            Customer customer = new Customer();
            customer.Id = id;
            return customer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameENG
        {
            get
            {
                return _NameENG;
            }
            set
            {
                OnNameENGChanging(value);
                ReportPropertyChanging("NameENG");
                _NameENG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NameENG");
                OnNameENGChanged();
            }
        }
        private global::System.String _NameENG;
        partial void OnNameENGChanging(global::System.String value);
        partial void OnNameENGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameCHS
        {
            get
            {
                return _NameCHS;
            }
            set
            {
                OnNameCHSChanging(value);
                ReportPropertyChanging("NameCHS");
                _NameCHS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NameCHS");
                OnNameCHSChanged();
            }
        }
        private global::System.String _NameCHS;
        partial void OnNameCHSChanging(global::System.String value);
        partial void OnNameCHSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Region
        {
            get
            {
                return _Region;
            }
            set
            {
                OnRegionChanging(value);
                ReportPropertyChanging("Region");
                _Region = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Region");
                OnRegionChanged();
            }
        }
        private global::System.String _Region;
        partial void OnRegionChanging(global::System.String value);
        partial void OnRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Province
        {
            get
            {
                return _Province;
            }
            set
            {
                OnProvinceChanging(value);
                ReportPropertyChanging("Province");
                _Province = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Province");
                OnProvinceChanged();
            }
        }
        private global::System.String _Province;
        partial void OnProvinceChanging(global::System.String value);
        partial void OnProvinceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_Customer", "Deal")]
        public EntityCollection<Deal> Deals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deal>("COATModel.FK_Deal_Customer", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deal>("COATModel.FK_Deal_Customer", "Deal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="Deal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Deal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Deal object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Deal CreateDeal(global::System.String id)
        {
            Deal deal = new Deal();
            deal.Id = id;
            return deal;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegistStatus
        {
            get
            {
                return _RegistStatus;
            }
            set
            {
                OnRegistStatusChanging(value);
                ReportPropertyChanging("RegistStatus");
                _RegistStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistStatus");
                OnRegistStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _RegistStatus;
        partial void OnRegistStatusChanging(Nullable<global::System.Int32> value);
        partial void OnRegistStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                OnCustomerIdChanging(value);
                ReportPropertyChanging("CustomerId");
                _CustomerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerId");
                OnCustomerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerId;
        partial void OnCustomerIdChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IndustryId
        {
            get
            {
                return _IndustryId;
            }
            set
            {
                OnIndustryIdChanging(value);
                ReportPropertyChanging("IndustryId");
                _IndustryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IndustryId");
                OnIndustryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IndustryId;
        partial void OnIndustryIdChanging(Nullable<global::System.Int32> value);
        partial void OnIndustryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PartnerId
        {
            get
            {
                return _PartnerId;
            }
            set
            {
                OnPartnerIdChanging(value);
                ReportPropertyChanging("PartnerId");
                _PartnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartnerId");
                OnPartnerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PartnerId;
        partial void OnPartnerIdChanging(Nullable<global::System.Int32> value);
        partial void OnPartnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String District
        {
            get
            {
                return _District;
            }
            set
            {
                OnDistrictChanging(value);
                ReportPropertyChanging("District");
                _District = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("District");
                OnDistrictChanged();
            }
        }
        private global::System.String _District;
        partial void OnDistrictChanging(global::System.String value);
        partial void OnDistrictChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegPromotion
        {
            get
            {
                return _RegPromotion;
            }
            set
            {
                OnRegPromotionChanging(value);
                ReportPropertyChanging("RegPromotion");
                _RegPromotion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegPromotion");
                OnRegPromotionChanged();
            }
        }
        private global::System.String _RegPromotion;
        partial void OnRegPromotionChanging(global::System.String value);
        partial void OnRegPromotionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegPromotionOrderId
        {
            get
            {
                return _RegPromotionOrderId;
            }
            set
            {
                OnRegPromotionOrderIdChanging(value);
                ReportPropertyChanging("RegPromotionOrderId");
                _RegPromotionOrderId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegPromotionOrderId");
                OnRegPromotionOrderIdChanged();
            }
        }
        private global::System.String _RegPromotionOrderId;
        partial void OnRegPromotionOrderIdChanging(global::System.String value);
        partial void OnRegPromotionOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PAM
        {
            get
            {
                return _PAM;
            }
            set
            {
                OnPAMChanging(value);
                ReportPropertyChanging("PAM");
                _PAM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PAM");
                OnPAMChanged();
            }
        }
        private global::System.String _PAM;
        partial void OnPAMChanging(global::System.String value);
        partial void OnPAMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ImportDate
        {
            get
            {
                return _ImportDate;
            }
            set
            {
                OnImportDateChanging(value);
                ReportPropertyChanging("ImportDate");
                _ImportDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImportDate");
                OnImportDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ImportDate;
        partial void OnImportDateChanging(Nullable<global::System.DateTime> value);
        partial void OnImportDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Industry2Id
        {
            get
            {
                return _Industry2Id;
            }
            set
            {
                OnIndustry2IdChanging(value);
                ReportPropertyChanging("Industry2Id");
                _Industry2Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Industry2Id");
                OnIndustry2IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Industry2Id;
        partial void OnIndustry2IdChanging(Nullable<global::System.Int32> value);
        partial void OnIndustry2IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusId;
        partial void OnStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApproverId
        {
            get
            {
                return _ApproverId;
            }
            set
            {
                OnApproverIdChanging(value);
                ReportPropertyChanging("ApproverId");
                _ApproverId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproverId");
                OnApproverIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ApproverId;
        partial void OnApproverIdChanging(Nullable<global::System.Int32> value);
        partial void OnApproverIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NotifySalesId
        {
            get
            {
                return _NotifySalesId;
            }
            set
            {
                OnNotifySalesIdChanging(value);
                ReportPropertyChanging("NotifySalesId");
                _NotifySalesId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotifySalesId");
                OnNotifySalesIdChanged();
            }
        }
        private Nullable<global::System.Int32> _NotifySalesId;
        partial void OnNotifySalesIdChanging(Nullable<global::System.Int32> value);
        partial void OnNotifySalesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SpecializationId
        {
            get
            {
                return _SpecializationId;
            }
            set
            {
                OnSpecializationIdChanging(value);
                ReportPropertyChanging("SpecializationId");
                _SpecializationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecializationId");
                OnSpecializationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SpecializationId;
        partial void OnSpecializationIdChanging(Nullable<global::System.Int32> value);
        partial void OnSpecializationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProvinceId
        {
            get
            {
                return _ProvinceId;
            }
            set
            {
                OnProvinceIdChanging(value);
                ReportPropertyChanging("ProvinceId");
                _ProvinceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProvinceId");
                OnProvinceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProvinceId;
        partial void OnProvinceIdChanging(Nullable<global::System.Int32> value);
        partial void OnProvinceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChinaRegion
        {
            get
            {
                return _ChinaRegion;
            }
            set
            {
                OnChinaRegionChanging(value);
                ReportPropertyChanging("ChinaRegion");
                _ChinaRegion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChinaRegion");
                OnChinaRegionChanged();
            }
        }
        private global::System.String _ChinaRegion;
        partial void OnChinaRegionChanging(global::System.String value);
        partial void OnChinaRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AssignerId
        {
            get
            {
                return _AssignerId;
            }
            set
            {
                OnAssignerIdChanging(value);
                ReportPropertyChanging("AssignerId");
                _AssignerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssignerId");
                OnAssignerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AssignerId;
        partial void OnAssignerIdChanging(Nullable<global::System.Int32> value);
        partial void OnAssignerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DirectorId
        {
            get
            {
                return _DirectorId;
            }
            set
            {
                OnDirectorIdChanging(value);
                ReportPropertyChanging("DirectorId");
                _DirectorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DirectorId");
                OnDirectorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DirectorId;
        partial void OnDirectorIdChanging(Nullable<global::System.Int32> value);
        partial void OnDirectorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AssignDate
        {
            get
            {
                return _AssignDate;
            }
            set
            {
                OnAssignDateChanging(value);
                ReportPropertyChanging("AssignDate");
                _AssignDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssignDate");
                OnAssignDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AssignDate;
        partial void OnAssignDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAssignDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApproveDate
        {
            get
            {
                return _ApproveDate;
            }
            set
            {
                OnApproveDateChanging(value);
                ReportPropertyChanging("ApproveDate");
                _ApproveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveDate");
                OnApproveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApproveDate;
        partial void OnApproveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnApproveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DirectorDate
        {
            get
            {
                return _DirectorDate;
            }
            set
            {
                OnDirectorDateChanging(value);
                ReportPropertyChanging("DirectorDate");
                _DirectorDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DirectorDate");
                OnDirectorDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DirectorDate;
        partial void OnDirectorDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDirectorDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_ApprovalHistory_Deal", "ApprovalHistory")]
        public EntityCollection<ApprovalHistory> ApprovalHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApprovalHistory>("COATModel.FK_ApprovalHistory_Deal", "ApprovalHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApprovalHistory>("COATModel.FK_ApprovalHistory_Deal", "ApprovalHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_Customer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("COATModel.FK_Deal_Customer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("COATModel.FK_Deal_Customer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("COATModel.FK_Deal_Customer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("COATModel.FK_Deal_Customer", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_Approver", "User")]
        public User Approver
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("COATModel.FK_Deal_Approver", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("COATModel.FK_Deal_Approver", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ApproverReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("COATModel.FK_Deal_Approver", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("COATModel.FK_Deal_Approver", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_DealProduct", "DealProduct")]
        public EntityCollection<DealProduct> DealProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DealProduct>("COATModel.FK_Deal_DealProduct", "DealProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DealProduct>("COATModel.FK_Deal_DealProduct", "DealProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_Industry", "Industry")]
        public Industry Industry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("COATModel.FK_Deal_Industry", "Industry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("COATModel.FK_Deal_Industry", "Industry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Industry> IndustryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("COATModel.FK_Deal_Industry", "Industry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Industry>("COATModel.FK_Deal_Industry", "Industry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_Industry2", "Industry2")]
        public Industry2 Industry2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry2>("COATModel.FK_Deal_Industry2", "Industry2").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry2>("COATModel.FK_Deal_Industry2", "Industry2").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Industry2> Industry2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry2>("COATModel.FK_Deal_Industry2", "Industry2");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Industry2>("COATModel.FK_Deal_Industry2", "Industry2", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_Notifier", "User")]
        public User Notifier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("COATModel.FK_Deal_Notifier", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("COATModel.FK_Deal_Notifier", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> NotifierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("COATModel.FK_Deal_Notifier", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("COATModel.FK_Deal_Notifier", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_Partner", "Partner")]
        public Partner Partner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Partner>("COATModel.FK_Deal_Partner", "Partner").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Partner>("COATModel.FK_Deal_Partner", "Partner").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Partner> PartnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Partner>("COATModel.FK_Deal_Partner", "Partner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Partner>("COATModel.FK_Deal_Partner", "Partner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_Province", "Province")]
        public Province Province
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("COATModel.FK_Deal_Province", "Province").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("COATModel.FK_Deal_Province", "Province").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Province> ProvinceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("COATModel.FK_Deal_Province", "Province");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Province>("COATModel.FK_Deal_Province", "Province", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_SFDCStatus", "SFDCStatus")]
        public SFDCStatus SFDCStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SFDCStatus>("COATModel.FK_Deal_SFDCStatus", "SFDCStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SFDCStatus>("COATModel.FK_Deal_SFDCStatus", "SFDCStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SFDCStatus> SFDCStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SFDCStatus>("COATModel.FK_Deal_SFDCStatus", "SFDCStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SFDCStatus>("COATModel.FK_Deal_SFDCStatus", "SFDCStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_Specialization", "Specialization")]
        public Specialization Specialization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specialization>("COATModel.FK_Deal_Specialization", "Specialization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specialization>("COATModel.FK_Deal_Specialization", "Specialization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Specialization> SpecializationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specialization>("COATModel.FK_Deal_Specialization", "Specialization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Specialization>("COATModel.FK_Deal_Specialization", "Specialization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_Status", "Status")]
        public Status Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("COATModel.FK_Deal_Status", "Status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("COATModel.FK_Deal_Status", "Status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Status> StatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("COATModel.FK_Deal_Status", "Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Status>("COATModel.FK_Deal_Status", "Status", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_DealContract_Deal", "DealContract")]
        public EntityCollection<DealContract> DealContracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DealContract>("COATModel.FK_DealContract_Deal", "DealContract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DealContract>("COATModel.FK_DealContract_Deal", "DealContract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_ModifiedHistory_Deal", "ModifiedHistory")]
        public EntityCollection<ModifiedHistory> ModifiedHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ModifiedHistory>("COATModel.FK_ModifiedHistory_Deal", "ModifiedHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ModifiedHistory>("COATModel.FK_ModifiedHistory_Deal", "ModifiedHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_Assigner", "User")]
        public User Assigner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("COATModel.FK_Deal_Assigner", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("COATModel.FK_Deal_Assigner", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> AssignerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("COATModel.FK_Deal_Assigner", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("COATModel.FK_Deal_Assigner", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_Director", "User")]
        public User Director
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("COATModel.FK_Deal_Director", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("COATModel.FK_Deal_Director", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> DirectorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("COATModel.FK_Deal_Director", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("COATModel.FK_Deal_Director", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="DealContract")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DealContract : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DealContract object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dealId">Initial value of the DealId property.</param>
        /// <param name="contractId">Initial value of the ContractId property.</param>
        public static DealContract CreateDealContract(global::System.Int32 id, global::System.String dealId, global::System.Int32 contractId)
        {
            DealContract dealContract = new DealContract();
            dealContract.Id = id;
            dealContract.DealId = dealId;
            dealContract.ContractId = contractId;
            return dealContract;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DealId
        {
            get
            {
                return _DealId;
            }
            set
            {
                OnDealIdChanging(value);
                ReportPropertyChanging("DealId");
                _DealId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DealId");
                OnDealIdChanged();
            }
        }
        private global::System.String _DealId;
        partial void OnDealIdChanging(global::System.String value);
        partial void OnDealIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractId
        {
            get
            {
                return _ContractId;
            }
            set
            {
                OnContractIdChanging(value);
                ReportPropertyChanging("ContractId");
                _ContractId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractId");
                OnContractIdChanged();
            }
        }
        private global::System.Int32 _ContractId;
        partial void OnContractIdChanging(global::System.Int32 value);
        partial void OnContractIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_DealContract_Contract", "Contract")]
        public Contract Contract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("COATModel.FK_DealContract_Contract", "Contract").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("COATModel.FK_DealContract_Contract", "Contract").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contract> ContractReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("COATModel.FK_DealContract_Contract", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contract>("COATModel.FK_DealContract_Contract", "Contract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_DealContract_Deal", "Deal")]
        public Deal Deal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("COATModel.FK_DealContract_Deal", "Deal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("COATModel.FK_DealContract_Deal", "Deal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Deal> DealReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("COATModel.FK_DealContract_Deal", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Deal>("COATModel.FK_DealContract_Deal", "Deal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="DealProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DealProduct : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DealProduct object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dealId">Initial value of the DealId property.</param>
        /// <param name="productName">Initial value of the ProductName property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static DealProduct CreateDealProduct(global::System.Int32 id, global::System.String dealId, global::System.String productName, global::System.Double price, global::System.Boolean isActive)
        {
            DealProduct dealProduct = new DealProduct();
            dealProduct.Id = id;
            dealProduct.DealId = dealId;
            dealProduct.ProductName = productName;
            dealProduct.Price = price;
            dealProduct.IsActive = isActive;
            return dealProduct;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DealId
        {
            get
            {
                return _DealId;
            }
            set
            {
                OnDealIdChanging(value);
                ReportPropertyChanging("DealId");
                _DealId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DealId");
                OnDealIdChanged();
            }
        }
        private global::System.String _DealId;
        partial void OnDealIdChanging(global::System.String value);
        partial void OnDealIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_ApprovalHistory_DealProduct", "ApprovalHistory")]
        public EntityCollection<ApprovalHistory> ApprovalHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApprovalHistory>("COATModel.FK_ApprovalHistory_DealProduct", "ApprovalHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApprovalHistory>("COATModel.FK_ApprovalHistory_DealProduct", "ApprovalHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_ModifiedHistory_DealProduct", "ModifiedHistory")]
        public EntityCollection<ModifiedHistory> ModifiedHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ModifiedHistory>("COATModel.FK_ModifiedHistory_DealProduct", "ModifiedHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ModifiedHistory>("COATModel.FK_ModifiedHistory_DealProduct", "ModifiedHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_DealProduct", "Deal")]
        public Deal Deal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("COATModel.FK_Deal_DealProduct", "Deal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("COATModel.FK_Deal_DealProduct", "Deal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Deal> DealReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("COATModel.FK_Deal_DealProduct", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Deal>("COATModel.FK_Deal_DealProduct", "Deal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="DealProductDetailsView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DealProductDetailsView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DealProductDetailsView object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="productName">Initial value of the ProductName property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="partnerName">Initial value of the PartnerName property.</param>
        /// <param name="qualification">Initial value of the Qualification property.</param>
        public static DealProductDetailsView CreateDealProductDetailsView(global::System.String id, global::System.String productName, global::System.Double price, global::System.Boolean isActive, global::System.String partnerName, global::System.String qualification)
        {
            DealProductDetailsView dealProductDetailsView = new DealProductDetailsView();
            dealProductDetailsView.Id = id;
            dealProductDetailsView.ProductName = productName;
            dealProductDetailsView.Price = price;
            dealProductDetailsView.IsActive = isActive;
            dealProductDetailsView.PartnerName = partnerName;
            dealProductDetailsView.Qualification = qualification;
            return dealProductDetailsView;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegistStatus
        {
            get
            {
                return _RegistStatus;
            }
            set
            {
                OnRegistStatusChanging(value);
                ReportPropertyChanging("RegistStatus");
                _RegistStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistStatus");
                OnRegistStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _RegistStatus;
        partial void OnRegistStatusChanging(Nullable<global::System.Int32> value);
        partial void OnRegistStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                OnCustomerIdChanging(value);
                ReportPropertyChanging("CustomerId");
                _CustomerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerId");
                OnCustomerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerId;
        partial void OnCustomerIdChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IndustryId
        {
            get
            {
                return _IndustryId;
            }
            set
            {
                OnIndustryIdChanging(value);
                ReportPropertyChanging("IndustryId");
                _IndustryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IndustryId");
                OnIndustryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IndustryId;
        partial void OnIndustryIdChanging(Nullable<global::System.Int32> value);
        partial void OnIndustryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PartnerId
        {
            get
            {
                return _PartnerId;
            }
            set
            {
                OnPartnerIdChanging(value);
                ReportPropertyChanging("PartnerId");
                _PartnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartnerId");
                OnPartnerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PartnerId;
        partial void OnPartnerIdChanging(Nullable<global::System.Int32> value);
        partial void OnPartnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String District
        {
            get
            {
                return _District;
            }
            set
            {
                OnDistrictChanging(value);
                ReportPropertyChanging("District");
                _District = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("District");
                OnDistrictChanged();
            }
        }
        private global::System.String _District;
        partial void OnDistrictChanging(global::System.String value);
        partial void OnDistrictChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegPromotion
        {
            get
            {
                return _RegPromotion;
            }
            set
            {
                OnRegPromotionChanging(value);
                ReportPropertyChanging("RegPromotion");
                _RegPromotion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegPromotion");
                OnRegPromotionChanged();
            }
        }
        private global::System.String _RegPromotion;
        partial void OnRegPromotionChanging(global::System.String value);
        partial void OnRegPromotionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegPromotionOrderId
        {
            get
            {
                return _RegPromotionOrderId;
            }
            set
            {
                OnRegPromotionOrderIdChanging(value);
                ReportPropertyChanging("RegPromotionOrderId");
                _RegPromotionOrderId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegPromotionOrderId");
                OnRegPromotionOrderIdChanged();
            }
        }
        private global::System.String _RegPromotionOrderId;
        partial void OnRegPromotionOrderIdChanging(global::System.String value);
        partial void OnRegPromotionOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PAM
        {
            get
            {
                return _PAM;
            }
            set
            {
                OnPAMChanging(value);
                ReportPropertyChanging("PAM");
                _PAM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PAM");
                OnPAMChanged();
            }
        }
        private global::System.String _PAM;
        partial void OnPAMChanging(global::System.String value);
        partial void OnPAMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ImportDate
        {
            get
            {
                return _ImportDate;
            }
            set
            {
                OnImportDateChanging(value);
                ReportPropertyChanging("ImportDate");
                _ImportDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImportDate");
                OnImportDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ImportDate;
        partial void OnImportDateChanging(Nullable<global::System.DateTime> value);
        partial void OnImportDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Industry2Id
        {
            get
            {
                return _Industry2Id;
            }
            set
            {
                OnIndustry2IdChanging(value);
                ReportPropertyChanging("Industry2Id");
                _Industry2Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Industry2Id");
                OnIndustry2IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Industry2Id;
        partial void OnIndustry2IdChanging(Nullable<global::System.Int32> value);
        partial void OnIndustry2IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusId;
        partial void OnStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApproverId
        {
            get
            {
                return _ApproverId;
            }
            set
            {
                OnApproverIdChanging(value);
                ReportPropertyChanging("ApproverId");
                _ApproverId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproverId");
                OnApproverIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ApproverId;
        partial void OnApproverIdChanging(Nullable<global::System.Int32> value);
        partial void OnApproverIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NotifySalesId
        {
            get
            {
                return _NotifySalesId;
            }
            set
            {
                OnNotifySalesIdChanging(value);
                ReportPropertyChanging("NotifySalesId");
                _NotifySalesId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotifySalesId");
                OnNotifySalesIdChanged();
            }
        }
        private Nullable<global::System.Int32> _NotifySalesId;
        partial void OnNotifySalesIdChanging(Nullable<global::System.Int32> value);
        partial void OnNotifySalesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SpecializationId
        {
            get
            {
                return _SpecializationId;
            }
            set
            {
                OnSpecializationIdChanging(value);
                ReportPropertyChanging("SpecializationId");
                _SpecializationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecializationId");
                OnSpecializationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SpecializationId;
        partial void OnSpecializationIdChanging(Nullable<global::System.Int32> value);
        partial void OnSpecializationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProvinceId
        {
            get
            {
                return _ProvinceId;
            }
            set
            {
                OnProvinceIdChanging(value);
                ReportPropertyChanging("ProvinceId");
                _ProvinceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProvinceId");
                OnProvinceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProvinceId;
        partial void OnProvinceIdChanging(Nullable<global::System.Int32> value);
        partial void OnProvinceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChinaRegion
        {
            get
            {
                return _ChinaRegion;
            }
            set
            {
                OnChinaRegionChanging(value);
                ReportPropertyChanging("ChinaRegion");
                _ChinaRegion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChinaRegion");
                OnChinaRegionChanged();
            }
        }
        private global::System.String _ChinaRegion;
        partial void OnChinaRegionChanging(global::System.String value);
        partial void OnChinaRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProvinceName
        {
            get
            {
                return _ProvinceName;
            }
            set
            {
                OnProvinceNameChanging(value);
                ReportPropertyChanging("ProvinceName");
                _ProvinceName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProvinceName");
                OnProvinceNameChanged();
            }
        }
        private global::System.String _ProvinceName;
        partial void OnProvinceNameChanging(global::System.String value);
        partial void OnProvinceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                if (_ProductName != value)
                {
                    OnProductNameChanging(value);
                    ReportPropertyChanging("ProductName");
                    _ProductName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProductName");
                    OnProductNameChanged();
                }
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                if (_Price != value)
                {
                    OnPriceChanging(value);
                    ReportPropertyChanging("Price");
                    _Price = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Price");
                    OnPriceChanged();
                }
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                if (_IsActive != value)
                {
                    OnIsActiveChanging(value);
                    ReportPropertyChanging("IsActive");
                    _IsActive = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsActive");
                    OnIsActiveChanged();
                }
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IndustryName
        {
            get
            {
                return _IndustryName;
            }
            set
            {
                OnIndustryNameChanging(value);
                ReportPropertyChanging("IndustryName");
                _IndustryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IndustryName");
                OnIndustryNameChanged();
            }
        }
        private global::System.String _IndustryName;
        partial void OnIndustryNameChanging(global::System.String value);
        partial void OnIndustryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Industry2Name
        {
            get
            {
                return _Industry2Name;
            }
            set
            {
                OnIndustry2NameChanging(value);
                ReportPropertyChanging("Industry2Name");
                _Industry2Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Industry2Name");
                OnIndustry2NameChanged();
            }
        }
        private global::System.String _Industry2Name;
        partial void OnIndustry2NameChanging(global::System.String value);
        partial void OnIndustry2NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameENG
        {
            get
            {
                return _NameENG;
            }
            set
            {
                OnNameENGChanging(value);
                ReportPropertyChanging("NameENG");
                _NameENG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NameENG");
                OnNameENGChanged();
            }
        }
        private global::System.String _NameENG;
        partial void OnNameENGChanging(global::System.String value);
        partial void OnNameENGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameCHS
        {
            get
            {
                return _NameCHS;
            }
            set
            {
                OnNameCHSChanging(value);
                ReportPropertyChanging("NameCHS");
                _NameCHS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NameCHS");
                OnNameCHSChanged();
            }
        }
        private global::System.String _NameCHS;
        partial void OnNameCHSChanging(global::System.String value);
        partial void OnNameCHSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ORPTypeName
        {
            get
            {
                return _ORPTypeName;
            }
            set
            {
                OnORPTypeNameChanging(value);
                ReportPropertyChanging("ORPTypeName");
                _ORPTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ORPTypeName");
                OnORPTypeNameChanged();
            }
        }
        private global::System.String _ORPTypeName;
        partial void OnORPTypeNameChanging(global::System.String value);
        partial void OnORPTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StatusName
        {
            get
            {
                return _StatusName;
            }
            set
            {
                OnStatusNameChanging(value);
                ReportPropertyChanging("StatusName");
                _StatusName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StatusName");
                OnStatusNameChanged();
            }
        }
        private global::System.String _StatusName;
        partial void OnStatusNameChanging(global::System.String value);
        partial void OnStatusNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActionName
        {
            get
            {
                return _ActionName;
            }
            set
            {
                OnActionNameChanging(value);
                ReportPropertyChanging("ActionName");
                _ActionName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActionName");
                OnActionNameChanged();
            }
        }
        private global::System.String _ActionName;
        partial void OnActionNameChanging(global::System.String value);
        partial void OnActionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PartnerName
        {
            get
            {
                return _PartnerName;
            }
            set
            {
                if (_PartnerName != value)
                {
                    OnPartnerNameChanging(value);
                    ReportPropertyChanging("PartnerName");
                    _PartnerName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PartnerName");
                    OnPartnerNameChanged();
                }
            }
        }
        private global::System.String _PartnerName;
        partial void OnPartnerNameChanging(global::System.String value);
        partial void OnPartnerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Qualification
        {
            get
            {
                return _Qualification;
            }
            set
            {
                if (_Qualification != value)
                {
                    OnQualificationChanging(value);
                    ReportPropertyChanging("Qualification");
                    _Qualification = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Qualification");
                    OnQualificationChanged();
                }
            }
        }
        private global::System.String _Qualification;
        partial void OnQualificationChanging(global::System.String value);
        partial void OnQualificationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> SalesCare
        {
            get
            {
                return _SalesCare;
            }
            set
            {
                OnSalesCareChanging(value);
                ReportPropertyChanging("SalesCare");
                _SalesCare = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalesCare");
                OnSalesCareChanged();
            }
        }
        private Nullable<global::System.Boolean> _SalesCare;
        partial void OnSalesCareChanging(Nullable<global::System.Boolean> value);
        partial void OnSalesCareChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="DealSizeView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DealSizeView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DealSizeView object.
        /// </summary>
        /// <param name="dealId">Initial value of the DealId property.</param>
        public static DealSizeView CreateDealSizeView(global::System.String dealId)
        {
            DealSizeView dealSizeView = new DealSizeView();
            dealSizeView.DealId = dealId;
            return dealSizeView;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DealId
        {
            get
            {
                return _DealId;
            }
            set
            {
                if (_DealId != value)
                {
                    OnDealIdChanging(value);
                    ReportPropertyChanging("DealId");
                    _DealId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DealId");
                    OnDealIdChanged();
                }
            }
        }
        private global::System.String _DealId;
        partial void OnDealIdChanging(global::System.String value);
        partial void OnDealIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TotalPrice
        {
            get
            {
                return _TotalPrice;
            }
            set
            {
                OnTotalPriceChanging(value);
                ReportPropertyChanging("TotalPrice");
                _TotalPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPrice");
                OnTotalPriceChanged();
            }
        }
        private Nullable<global::System.Double> _TotalPrice;
        partial void OnTotalPriceChanging(Nullable<global::System.Double> value);
        partial void OnTotalPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSalesSize
        {
            get
            {
                return _IsSalesSize;
            }
            set
            {
                OnIsSalesSizeChanging(value);
                ReportPropertyChanging("IsSalesSize");
                _IsSalesSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSalesSize");
                OnIsSalesSizeChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSalesSize;
        partial void OnIsSalesSizeChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSalesSizeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="ExcutivedDeal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExcutivedDeal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExcutivedDeal object.
        /// </summary>
        /// <param name="dealId">Initial value of the DealId property.</param>
        public static ExcutivedDeal CreateExcutivedDeal(global::System.String dealId)
        {
            ExcutivedDeal excutivedDeal = new ExcutivedDeal();
            excutivedDeal.DealId = dealId;
            return excutivedDeal;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DealId
        {
            get
            {
                return _DealId;
            }
            set
            {
                if (_DealId != value)
                {
                    OnDealIdChanging(value);
                    ReportPropertyChanging("DealId");
                    _DealId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DealId");
                    OnDealIdChanged();
                }
            }
        }
        private global::System.String _DealId;
        partial void OnDealIdChanging(global::System.String value);
        partial void OnDealIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EndUserName
        {
            get
            {
                return _EndUserName;
            }
            set
            {
                OnEndUserNameChanging(value);
                ReportPropertyChanging("EndUserName");
                _EndUserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EndUserName");
                OnEndUserNameChanged();
            }
        }
        private global::System.String _EndUserName;
        partial void OnEndUserNameChanging(global::System.String value);
        partial void OnEndUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PAMName
        {
            get
            {
                return _PAMName;
            }
            set
            {
                OnPAMNameChanging(value);
                ReportPropertyChanging("PAMName");
                _PAMName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PAMName");
                OnPAMNameChanged();
            }
        }
        private global::System.String _PAMName;
        partial void OnPAMNameChanging(global::System.String value);
        partial void OnPAMNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreateDateAndQuater
        {
            get
            {
                return _CreateDateAndQuater;
            }
            set
            {
                OnCreateDateAndQuaterChanging(value);
                ReportPropertyChanging("CreateDateAndQuater");
                _CreateDateAndQuater = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreateDateAndQuater");
                OnCreateDateAndQuaterChanged();
            }
        }
        private global::System.String _CreateDateAndQuater;
        partial void OnCreateDateAndQuaterChanging(global::System.String value);
        partial void OnCreateDateAndQuaterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExpireDateAndQuater
        {
            get
            {
                return _ExpireDateAndQuater;
            }
            set
            {
                OnExpireDateAndQuaterChanging(value);
                ReportPropertyChanging("ExpireDateAndQuater");
                _ExpireDateAndQuater = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExpireDateAndQuater");
                OnExpireDateAndQuaterChanged();
            }
        }
        private global::System.String _ExpireDateAndQuater;
        partial void OnExpireDateAndQuaterChanging(global::System.String value);
        partial void OnExpireDateAndQuaterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClosureDateAndQuater
        {
            get
            {
                return _ClosureDateAndQuater;
            }
            set
            {
                OnClosureDateAndQuaterChanging(value);
                ReportPropertyChanging("ClosureDateAndQuater");
                _ClosureDateAndQuater = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClosureDateAndQuater");
                OnClosureDateAndQuaterChanged();
            }
        }
        private global::System.String _ClosureDateAndQuater;
        partial void OnClosureDateAndQuaterChanging(global::System.String value);
        partial void OnClosureDateAndQuaterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PartnerOwner
        {
            get
            {
                return _PartnerOwner;
            }
            set
            {
                OnPartnerOwnerChanging(value);
                ReportPropertyChanging("PartnerOwner");
                _PartnerOwner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PartnerOwner");
                OnPartnerOwnerChanged();
            }
        }
        private global::System.String _PartnerOwner;
        partial void OnPartnerOwnerChanging(global::System.String value);
        partial void OnPartnerOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PartnerType
        {
            get
            {
                return _PartnerType;
            }
            set
            {
                OnPartnerTypeChanging(value);
                ReportPropertyChanging("PartnerType");
                _PartnerType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PartnerType");
                OnPartnerTypeChanged();
            }
        }
        private global::System.String _PartnerType;
        partial void OnPartnerTypeChanging(global::System.String value);
        partial void OnPartnerTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LineRegStatus
        {
            get
            {
                return _LineRegStatus;
            }
            set
            {
                OnLineRegStatusChanging(value);
                ReportPropertyChanging("LineRegStatus");
                _LineRegStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LineRegStatus");
                OnLineRegStatusChanged();
            }
        }
        private global::System.String _LineRegStatus;
        partial void OnLineRegStatusChanging(global::System.String value);
        partial void OnLineRegStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OppIndustry
        {
            get
            {
                return _OppIndustry;
            }
            set
            {
                OnOppIndustryChanging(value);
                ReportPropertyChanging("OppIndustry");
                _OppIndustry = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OppIndustry");
                OnOppIndustryChanged();
            }
        }
        private global::System.String _OppIndustry;
        partial void OnOppIndustryChanging(global::System.String value);
        partial void OnOppIndustryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApprovedAmountUSD
        {
            get
            {
                return _ApprovedAmountUSD;
            }
            set
            {
                OnApprovedAmountUSDChanging(value);
                ReportPropertyChanging("ApprovedAmountUSD");
                _ApprovedAmountUSD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApprovedAmountUSD");
                OnApprovedAmountUSDChanged();
            }
        }
        private global::System.String _ApprovedAmountUSD;
        partial void OnApprovedAmountUSDChanging(global::System.String value);
        partial void OnApprovedAmountUSDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PartnerCountry
        {
            get
            {
                return _PartnerCountry;
            }
            set
            {
                OnPartnerCountryChanging(value);
                ReportPropertyChanging("PartnerCountry");
                _PartnerCountry = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PartnerCountry");
                OnPartnerCountryChanged();
            }
        }
        private global::System.String _PartnerCountry;
        partial void OnPartnerCountryChanging(global::System.String value);
        partial void OnPartnerCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PartnerRegion
        {
            get
            {
                return _PartnerRegion;
            }
            set
            {
                OnPartnerRegionChanging(value);
                ReportPropertyChanging("PartnerRegion");
                _PartnerRegion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PartnerRegion");
                OnPartnerRegionChanged();
            }
        }
        private global::System.String _PartnerRegion;
        partial void OnPartnerRegionChanging(global::System.String value);
        partial void OnPartnerRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.String _CreateDate;
        partial void OnCreateDateChanging(global::System.String value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CloseDate
        {
            get
            {
                return _CloseDate;
            }
            set
            {
                OnCloseDateChanging(value);
                ReportPropertyChanging("CloseDate");
                _CloseDate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CloseDate");
                OnCloseDateChanged();
            }
        }
        private global::System.String _CloseDate;
        partial void OnCloseDateChanging(global::System.String value);
        partial void OnCloseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExpireDate
        {
            get
            {
                return _ExpireDate;
            }
            set
            {
                OnExpireDateChanging(value);
                ReportPropertyChanging("ExpireDate");
                _ExpireDate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExpireDate");
                OnExpireDateChanged();
            }
        }
        private global::System.String _ExpireDate;
        partial void OnExpireDateChanging(global::System.String value);
        partial void OnExpireDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Specialization
        {
            get
            {
                return _Specialization;
            }
            set
            {
                OnSpecializationChanging(value);
                ReportPropertyChanging("Specialization");
                _Specialization = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Specialization");
                OnSpecializationChanged();
            }
        }
        private global::System.String _Specialization;
        partial void OnSpecializationChanging(global::System.String value);
        partial void OnSpecializationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreateFY
        {
            get
            {
                return _CreateFY;
            }
            set
            {
                OnCreateFYChanging(value);
                ReportPropertyChanging("CreateFY");
                _CreateFY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreateFY");
                OnCreateFYChanged();
            }
        }
        private global::System.String _CreateFY;
        partial void OnCreateFYChanging(global::System.String value);
        partial void OnCreateFYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CloseFY
        {
            get
            {
                return _CloseFY;
            }
            set
            {
                OnCloseFYChanging(value);
                ReportPropertyChanging("CloseFY");
                _CloseFY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CloseFY");
                OnCloseFYChanged();
            }
        }
        private global::System.String _CloseFY;
        partial void OnCloseFYChanging(global::System.String value);
        partial void OnCloseFYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExpireFY
        {
            get
            {
                return _ExpireFY;
            }
            set
            {
                OnExpireFYChanging(value);
                ReportPropertyChanging("ExpireFY");
                _ExpireFY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExpireFY");
                OnExpireFYChanged();
            }
        }
        private global::System.String _ExpireFY;
        partial void OnExpireFYChanging(global::System.String value);
        partial void OnExpireFYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PartnerRollUp
        {
            get
            {
                return _PartnerRollUp;
            }
            set
            {
                OnPartnerRollUpChanging(value);
                ReportPropertyChanging("PartnerRollUp");
                _PartnerRollUp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PartnerRollUp");
                OnPartnerRollUpChanged();
            }
        }
        private global::System.String _PartnerRollUp;
        partial void OnPartnerRollUpChanging(global::System.String value);
        partial void OnPartnerRollUpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Stage
        {
            get
            {
                return _Stage;
            }
            set
            {
                OnStageChanging(value);
                ReportPropertyChanging("Stage");
                _Stage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Stage");
                OnStageChanged();
            }
        }
        private global::System.String _Stage;
        partial void OnStageChanging(global::System.String value);
        partial void OnStageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PNETID
        {
            get
            {
                return _PNETID;
            }
            set
            {
                OnPNETIDChanging(value);
                ReportPropertyChanging("PNETID");
                _PNETID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PNETID");
                OnPNETIDChanged();
            }
        }
        private global::System.String _PNETID;
        partial void OnPNETIDChanging(global::System.String value);
        partial void OnPNETIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PartnerEmail
        {
            get
            {
                return _PartnerEmail;
            }
            set
            {
                OnPartnerEmailChanging(value);
                ReportPropertyChanging("PartnerEmail");
                _PartnerEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PartnerEmail");
                OnPartnerEmailChanged();
            }
        }
        private global::System.String _PartnerEmail;
        partial void OnPartnerEmailChanging(global::System.String value);
        partial void OnPartnerEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OppName
        {
            get
            {
                return _OppName;
            }
            set
            {
                OnOppNameChanging(value);
                ReportPropertyChanging("OppName");
                _OppName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OppName");
                OnOppNameChanged();
            }
        }
        private global::System.String _OppName;
        partial void OnOppNameChanging(global::System.String value);
        partial void OnOppNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EndUserName2
        {
            get
            {
                return _EndUserName2;
            }
            set
            {
                OnEndUserName2Changing(value);
                ReportPropertyChanging("EndUserName2");
                _EndUserName2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EndUserName2");
                OnEndUserName2Changed();
            }
        }
        private global::System.String _EndUserName2;
        partial void OnEndUserName2Changing(global::System.String value);
        partial void OnEndUserName2Changed();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="FileStore")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FileStore : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FileStore object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="directory">Initial value of the Directory property.</param>
        /// <param name="mimeType">Initial value of the MimeType property.</param>
        /// <param name="originalName">Initial value of the OriginalName property.</param>
        /// <param name="contentLength">Initial value of the ContentLength property.</param>
        /// <param name="extension">Initial value of the Extension property.</param>
        public static FileStore CreateFileStore(global::System.Int32 id, global::System.String directory, global::System.String mimeType, global::System.String originalName, global::System.Int32 contentLength, global::System.String extension)
        {
            FileStore fileStore = new FileStore();
            fileStore.Id = id;
            fileStore.Directory = directory;
            fileStore.MimeType = mimeType;
            fileStore.OriginalName = originalName;
            fileStore.ContentLength = contentLength;
            fileStore.Extension = extension;
            return fileStore;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Directory
        {
            get
            {
                return _Directory;
            }
            set
            {
                OnDirectoryChanging(value);
                ReportPropertyChanging("Directory");
                _Directory = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Directory");
                OnDirectoryChanged();
            }
        }
        private global::System.String _Directory;
        partial void OnDirectoryChanging(global::System.String value);
        partial void OnDirectoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MimeType
        {
            get
            {
                return _MimeType;
            }
            set
            {
                OnMimeTypeChanging(value);
                ReportPropertyChanging("MimeType");
                _MimeType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MimeType");
                OnMimeTypeChanged();
            }
        }
        private global::System.String _MimeType;
        partial void OnMimeTypeChanging(global::System.String value);
        partial void OnMimeTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OriginalName
        {
            get
            {
                return _OriginalName;
            }
            set
            {
                OnOriginalNameChanging(value);
                ReportPropertyChanging("OriginalName");
                _OriginalName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OriginalName");
                OnOriginalNameChanged();
            }
        }
        private global::System.String _OriginalName;
        partial void OnOriginalNameChanging(global::System.String value);
        partial void OnOriginalNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentLength
        {
            get
            {
                return _ContentLength;
            }
            set
            {
                OnContentLengthChanging(value);
                ReportPropertyChanging("ContentLength");
                _ContentLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentLength");
                OnContentLengthChanged();
            }
        }
        private global::System.Int32 _ContentLength;
        partial void OnContentLengthChanging(global::System.Int32 value);
        partial void OnContentLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Extension
        {
            get
            {
                return _Extension;
            }
            set
            {
                OnExtensionChanging(value);
                ReportPropertyChanging("Extension");
                _Extension = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Extension");
                OnExtensionChanged();
            }
        }
        private global::System.String _Extension;
        partial void OnExtensionChanging(global::System.String value);
        partial void OnExtensionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Contract_FileStore", "Contract")]
        public EntityCollection<Contract> Contracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contract>("COATModel.FK_Contract_FileStore", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contract>("COATModel.FK_Contract_FileStore", "Contract", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="ImportTask")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImportTask : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImportTask object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="isComplete">Initial value of the IsComplete property.</param>
        public static ImportTask CreateImportTask(global::System.Int32 id, global::System.Boolean isComplete)
        {
            ImportTask importTask = new ImportTask();
            importTask.Id = id;
            importTask.IsComplete = isComplete;
            return importTask;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorMessage
        {
            get
            {
                return _ErrorMessage;
            }
            set
            {
                OnErrorMessageChanging(value);
                ReportPropertyChanging("ErrorMessage");
                _ErrorMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorMessage");
                OnErrorMessageChanged();
            }
        }
        private global::System.String _ErrorMessage;
        partial void OnErrorMessageChanging(global::System.String value);
        partial void OnErrorMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsComplete
        {
            get
            {
                return _IsComplete;
            }
            set
            {
                OnIsCompleteChanging(value);
                ReportPropertyChanging("IsComplete");
                _IsComplete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsComplete");
                OnIsCompleteChanged();
            }
        }
        private global::System.Boolean _IsComplete;
        partial void OnIsCompleteChanging(global::System.Boolean value);
        partial void OnIsCompleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilePath
        {
            get
            {
                return _FilePath;
            }
            set
            {
                OnFilePathChanging(value);
                ReportPropertyChanging("FilePath");
                _FilePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilePath");
                OnFilePathChanged();
            }
        }
        private global::System.String _FilePath;
        partial void OnFilePathChanging(global::System.String value);
        partial void OnFilePathChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="Industry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Industry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Industry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Industry CreateIndustry(global::System.Int32 id)
        {
            Industry industry = new Industry();
            industry.Id = id;
            return industry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_Industry", "Deal")]
        public EntityCollection<Deal> Deals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deal>("COATModel.FK_Deal_Industry", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deal>("COATModel.FK_Deal_Industry", "Deal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="Industry2")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Industry2 : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Industry2 object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Industry2 CreateIndustry2(global::System.Int32 id, global::System.String name)
        {
            Industry2 industry2 = new Industry2();
            industry2.Id = id;
            industry2.Name = name;
            return industry2;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_Industry2", "Deal")]
        public EntityCollection<Deal> Deals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deal>("COATModel.FK_Deal_Industry2", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deal>("COATModel.FK_Deal_Industry2", "Deal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="ModifiedHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ModifiedHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ModifiedHistory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="action">Initial value of the Action property.</param>
        /// <param name="comment">Initial value of the Comment property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="dateTime">Initial value of the DateTime property.</param>
        public static ModifiedHistory CreateModifiedHistory(global::System.Int32 id, global::System.String action, global::System.String comment, global::System.Int32 userId, global::System.DateTime dateTime)
        {
            ModifiedHistory modifiedHistory = new ModifiedHistory();
            modifiedHistory.Id = id;
            modifiedHistory.Action = action;
            modifiedHistory.Comment = comment;
            modifiedHistory.UserId = userId;
            modifiedHistory.DateTime = dateTime;
            return modifiedHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DealId
        {
            get
            {
                return _DealId;
            }
            set
            {
                OnDealIdChanging(value);
                ReportPropertyChanging("DealId");
                _DealId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DealId");
                OnDealIdChanged();
            }
        }
        private global::System.String _DealId;
        partial void OnDealIdChanging(global::System.String value);
        partial void OnDealIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DealProductId
        {
            get
            {
                return _DealProductId;
            }
            set
            {
                OnDealProductIdChanging(value);
                ReportPropertyChanging("DealProductId");
                _DealProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealProductId");
                OnDealProductIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DealProductId;
        partial void OnDealProductIdChanging(Nullable<global::System.Int32> value);
        partial void OnDealProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private global::System.String _Action;
        partial void OnActionChanging(global::System.String value);
        partial void OnActionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTime
        {
            get
            {
                return _DateTime;
            }
            set
            {
                OnDateTimeChanging(value);
                ReportPropertyChanging("DateTime");
                _DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTime");
                OnDateTimeChanged();
            }
        }
        private global::System.DateTime _DateTime;
        partial void OnDateTimeChanging(global::System.DateTime value);
        partial void OnDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_ModifiedHistory_DealProduct", "DealProduct")]
        public DealProduct DealProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealProduct>("COATModel.FK_ModifiedHistory_DealProduct", "DealProduct").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealProduct>("COATModel.FK_ModifiedHistory_DealProduct", "DealProduct").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DealProduct> DealProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealProduct>("COATModel.FK_ModifiedHistory_DealProduct", "DealProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DealProduct>("COATModel.FK_ModifiedHistory_DealProduct", "DealProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_ModifiedHistory_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("COATModel.FK_ModifiedHistory_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("COATModel.FK_ModifiedHistory_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("COATModel.FK_ModifiedHistory_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("COATModel.FK_ModifiedHistory_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_ModifiedHistory_Deal", "Deal")]
        public Deal Deal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("COATModel.FK_ModifiedHistory_Deal", "Deal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("COATModel.FK_ModifiedHistory_Deal", "Deal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Deal> DealReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("COATModel.FK_ModifiedHistory_Deal", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Deal>("COATModel.FK_ModifiedHistory_Deal", "Deal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="NameAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NameAccount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NameAccount object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static NameAccount CreateNameAccount(global::System.Int32 id)
        {
            NameAccount nameAccount = new NameAccount();
            nameAccount.Id = id;
            return nameAccount;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Region
        {
            get
            {
                return _Region;
            }
            set
            {
                OnRegionChanging(value);
                ReportPropertyChanging("Region");
                _Region = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Region");
                OnRegionChanged();
            }
        }
        private global::System.String _Region;
        partial void OnRegionChanging(global::System.String value);
        partial void OnRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountCountryLocation
        {
            get
            {
                return _AccountCountryLocation;
            }
            set
            {
                OnAccountCountryLocationChanging(value);
                ReportPropertyChanging("AccountCountryLocation");
                _AccountCountryLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountCountryLocation");
                OnAccountCountryLocationChanged();
            }
        }
        private global::System.String _AccountCountryLocation;
        partial void OnAccountCountryLocationChanging(global::System.String value);
        partial void OnAccountCountryLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SalesTerritoryCode
        {
            get
            {
                return _SalesTerritoryCode;
            }
            set
            {
                OnSalesTerritoryCodeChanging(value);
                ReportPropertyChanging("SalesTerritoryCode");
                _SalesTerritoryCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SalesTerritoryCode");
                OnSalesTerritoryCodeChanged();
            }
        }
        private global::System.String _SalesTerritoryCode;
        partial void OnSalesTerritoryCodeChanging(global::System.String value);
        partial void OnSalesTerritoryCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullAccountName
        {
            get
            {
                return _FullAccountName;
            }
            set
            {
                OnFullAccountNameChanging(value);
                ReportPropertyChanging("FullAccountName");
                _FullAccountName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullAccountName");
                OnFullAccountNameChanged();
            }
        }
        private global::System.String _FullAccountName;
        partial void OnFullAccountNameChanging(global::System.String value);
        partial void OnFullAccountNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullAccountNameLocal
        {
            get
            {
                return _FullAccountNameLocal;
            }
            set
            {
                OnFullAccountNameLocalChanging(value);
                ReportPropertyChanging("FullAccountNameLocal");
                _FullAccountNameLocal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullAccountNameLocal");
                OnFullAccountNameLocalChanged();
            }
        }
        private global::System.String _FullAccountNameLocal;
        partial void OnFullAccountNameLocalChanging(global::System.String value);
        partial void OnFullAccountNameLocalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParentAccountName
        {
            get
            {
                return _ParentAccountName;
            }
            set
            {
                OnParentAccountNameChanging(value);
                ReportPropertyChanging("ParentAccountName");
                _ParentAccountName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParentAccountName");
                OnParentAccountNameChanged();
            }
        }
        private global::System.String _ParentAccountName;
        partial void OnParentAccountNameChanging(global::System.String value);
        partial void OnParentAccountNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParentAccountNameLocal
        {
            get
            {
                return _ParentAccountNameLocal;
            }
            set
            {
                OnParentAccountNameLocalChanging(value);
                ReportPropertyChanging("ParentAccountNameLocal");
                _ParentAccountNameLocal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParentAccountNameLocal");
                OnParentAccountNameLocalChanged();
            }
        }
        private global::System.String _ParentAccountNameLocal;
        partial void OnParentAccountNameLocalChanging(global::System.String value);
        partial void OnParentAccountNameLocalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DUNSNumber
        {
            get
            {
                return _DUNSNumber;
            }
            set
            {
                OnDUNSNumberChanging(value);
                ReportPropertyChanging("DUNSNumber");
                _DUNSNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DUNSNumber");
                OnDUNSNumberChanged();
            }
        }
        private global::System.String _DUNSNumber;
        partial void OnDUNSNumberChanging(global::System.String value);
        partial void OnDUNSNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Global_NIA
        {
            get
            {
                return _Global_NIA;
            }
            set
            {
                OnGlobal_NIAChanging(value);
                ReportPropertyChanging("Global_NIA");
                _Global_NIA = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Global_NIA");
                OnGlobal_NIAChanged();
            }
        }
        private global::System.String _Global_NIA;
        partial void OnGlobal_NIAChanging(global::System.String value);
        partial void OnGlobal_NIAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HQState
        {
            get
            {
                return _HQState;
            }
            set
            {
                OnHQStateChanging(value);
                ReportPropertyChanging("HQState");
                _HQState = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HQState");
                OnHQStateChanged();
            }
        }
        private global::System.String _HQState;
        partial void OnHQStateChanging(global::System.String value);
        partial void OnHQStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LocalState
        {
            get
            {
                return _LocalState;
            }
            set
            {
                OnLocalStateChanging(value);
                ReportPropertyChanging("LocalState");
                _LocalState = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LocalState");
                OnLocalStateChanged();
            }
        }
        private global::System.String _LocalState;
        partial void OnLocalStateChanging(global::System.String value);
        partial void OnLocalStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Industry
        {
            get
            {
                return _Industry;
            }
            set
            {
                OnIndustryChanging(value);
                ReportPropertyChanging("Industry");
                _Industry = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Industry");
                OnIndustryChanged();
            }
        }
        private global::System.String _Industry;
        partial void OnIndustryChanging(global::System.String value);
        partial void OnIndustryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.String _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.String value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PrimaryRep
        {
            get
            {
                return _PrimaryRep;
            }
            set
            {
                OnPrimaryRepChanging(value);
                ReportPropertyChanging("PrimaryRep");
                _PrimaryRep = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PrimaryRep");
                OnPrimaryRepChanged();
            }
        }
        private global::System.String _PrimaryRep;
        partial void OnPrimaryRepChanging(global::System.String value);
        partial void OnPrimaryRepChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountType
        {
            get
            {
                return _AccountType;
            }
            set
            {
                OnAccountTypeChanging(value);
                ReportPropertyChanging("AccountType");
                _AccountType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountType");
                OnAccountTypeChanged();
            }
        }
        private global::System.String _AccountType;
        partial void OnAccountTypeChanging(global::System.String value);
        partial void OnAccountTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SalesSegment
        {
            get
            {
                return _SalesSegment;
            }
            set
            {
                OnSalesSegmentChanging(value);
                ReportPropertyChanging("SalesSegment");
                _SalesSegment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SalesSegment");
                OnSalesSegmentChanged();
            }
        }
        private global::System.String _SalesSegment;
        partial void OnSalesSegmentChanging(global::System.String value);
        partial void OnSalesSegmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SFDCLinkage
        {
            get
            {
                return _SFDCLinkage;
            }
            set
            {
                OnSFDCLinkageChanging(value);
                ReportPropertyChanging("SFDCLinkage");
                _SFDCLinkage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SFDCLinkage");
                OnSFDCLinkageChanged();
            }
        }
        private global::System.String _SFDCLinkage;
        partial void OnSFDCLinkageChanging(global::System.String value);
        partial void OnSFDCLinkageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemType
        {
            get
            {
                return _ItemType;
            }
            set
            {
                OnItemTypeChanging(value);
                ReportPropertyChanging("ItemType");
                _ItemType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemType");
                OnItemTypeChanged();
            }
        }
        private global::System.String _ItemType;
        partial void OnItemTypeChanging(global::System.String value);
        partial void OnItemTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fiscal
        {
            get
            {
                return _Fiscal;
            }
            set
            {
                OnFiscalChanging(value);
                ReportPropertyChanging("Fiscal");
                _Fiscal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fiscal");
                OnFiscalChanged();
            }
        }
        private global::System.String _Fiscal;
        partial void OnFiscalChanging(global::System.String value);
        partial void OnFiscalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NALID
        {
            get
            {
                return _NALID;
            }
            set
            {
                OnNALIDChanging(value);
                ReportPropertyChanging("NALID");
                _NALID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NALID");
                OnNALIDChanged();
            }
        }
        private global::System.String _NALID;
        partial void OnNALIDChanging(global::System.String value);
        partial void OnNALIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="ORPType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ORPType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ORPType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static ORPType CreateORPType(global::System.Int32 id)
        {
            ORPType oRPType = new ORPType();
            oRPType.Id = id;
            return oRPType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="Partner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Partner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Partner object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Partner CreatePartner(global::System.Int32 id, global::System.String name)
        {
            Partner partner = new Partner();
            partner.Id = id;
            partner.Name = name;
            return partner;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Qualification
        {
            get
            {
                return _Qualification;
            }
            set
            {
                OnQualificationChanging(value);
                ReportPropertyChanging("Qualification");
                _Qualification = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Qualification");
                OnQualificationChanged();
            }
        }
        private global::System.String _Qualification;
        partial void OnQualificationChanging(global::System.String value);
        partial void OnQualificationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_Partner", "Deal")]
        public EntityCollection<Deal> Deals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deal>("COATModel.FK_Deal_Partner", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deal>("COATModel.FK_Deal_Partner", "Deal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="PendingSalesApproveDealsView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PendingSalesApproveDealsView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PendingSalesApproveDealsView object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static PendingSalesApproveDealsView CreatePendingSalesApproveDealsView(global::System.String id)
        {
            PendingSalesApproveDealsView pendingSalesApproveDealsView = new PendingSalesApproveDealsView();
            pendingSalesApproveDealsView.Id = id;
            return pendingSalesApproveDealsView;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="PendingSalesAssignDealsView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PendingSalesAssignDealsView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PendingSalesAssignDealsView object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static PendingSalesAssignDealsView CreatePendingSalesAssignDealsView(global::System.String id)
        {
            PendingSalesAssignDealsView pendingSalesAssignDealsView = new PendingSalesAssignDealsView();
            pendingSalesAssignDealsView.Id = id;
            return pendingSalesAssignDealsView;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="Province")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Province : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Province object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Province CreateProvince(global::System.Int32 id, global::System.String name)
        {
            Province province = new Province();
            province.Id = id;
            province.Name = name;
            return province;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_Province", "Deal")]
        public EntityCollection<Deal> Deals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deal>("COATModel.FK_Deal_Province", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deal>("COATModel.FK_Deal_Province", "Deal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="Region")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Region : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Region object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        public static Region CreateRegion(global::System.String name)
        {
            Region region = new Region();
            region.Name = name;
            return region;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="SalesApprovedDealsView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesApprovedDealsView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesApprovedDealsView object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static SalesApprovedDealsView CreateSalesApprovedDealsView(global::System.String id)
        {
            SalesApprovedDealsView salesApprovedDealsView = new SalesApprovedDealsView();
            salesApprovedDealsView.Id = id;
            return salesApprovedDealsView;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="SalesDealsView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesDealsView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesDealsView object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static SalesDealsView CreateSalesDealsView(global::System.String id)
        {
            SalesDealsView salesDealsView = new SalesDealsView();
            salesDealsView.Id = id;
            return salesDealsView;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegistStatus
        {
            get
            {
                return _RegistStatus;
            }
            set
            {
                OnRegistStatusChanging(value);
                ReportPropertyChanging("RegistStatus");
                _RegistStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistStatus");
                OnRegistStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _RegistStatus;
        partial void OnRegistStatusChanging(Nullable<global::System.Int32> value);
        partial void OnRegistStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                OnCustomerIdChanging(value);
                ReportPropertyChanging("CustomerId");
                _CustomerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerId");
                OnCustomerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerId;
        partial void OnCustomerIdChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IndustryId
        {
            get
            {
                return _IndustryId;
            }
            set
            {
                OnIndustryIdChanging(value);
                ReportPropertyChanging("IndustryId");
                _IndustryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IndustryId");
                OnIndustryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IndustryId;
        partial void OnIndustryIdChanging(Nullable<global::System.Int32> value);
        partial void OnIndustryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PartnerId
        {
            get
            {
                return _PartnerId;
            }
            set
            {
                OnPartnerIdChanging(value);
                ReportPropertyChanging("PartnerId");
                _PartnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartnerId");
                OnPartnerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PartnerId;
        partial void OnPartnerIdChanging(Nullable<global::System.Int32> value);
        partial void OnPartnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String District
        {
            get
            {
                return _District;
            }
            set
            {
                OnDistrictChanging(value);
                ReportPropertyChanging("District");
                _District = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("District");
                OnDistrictChanged();
            }
        }
        private global::System.String _District;
        partial void OnDistrictChanging(global::System.String value);
        partial void OnDistrictChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegPromotion
        {
            get
            {
                return _RegPromotion;
            }
            set
            {
                OnRegPromotionChanging(value);
                ReportPropertyChanging("RegPromotion");
                _RegPromotion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegPromotion");
                OnRegPromotionChanged();
            }
        }
        private global::System.String _RegPromotion;
        partial void OnRegPromotionChanging(global::System.String value);
        partial void OnRegPromotionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegPromotionOrderId
        {
            get
            {
                return _RegPromotionOrderId;
            }
            set
            {
                OnRegPromotionOrderIdChanging(value);
                ReportPropertyChanging("RegPromotionOrderId");
                _RegPromotionOrderId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegPromotionOrderId");
                OnRegPromotionOrderIdChanged();
            }
        }
        private global::System.String _RegPromotionOrderId;
        partial void OnRegPromotionOrderIdChanging(global::System.String value);
        partial void OnRegPromotionOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PAM
        {
            get
            {
                return _PAM;
            }
            set
            {
                OnPAMChanging(value);
                ReportPropertyChanging("PAM");
                _PAM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PAM");
                OnPAMChanged();
            }
        }
        private global::System.String _PAM;
        partial void OnPAMChanging(global::System.String value);
        partial void OnPAMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ImportDate
        {
            get
            {
                return _ImportDate;
            }
            set
            {
                OnImportDateChanging(value);
                ReportPropertyChanging("ImportDate");
                _ImportDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImportDate");
                OnImportDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ImportDate;
        partial void OnImportDateChanging(Nullable<global::System.DateTime> value);
        partial void OnImportDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Industry2Id
        {
            get
            {
                return _Industry2Id;
            }
            set
            {
                OnIndustry2IdChanging(value);
                ReportPropertyChanging("Industry2Id");
                _Industry2Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Industry2Id");
                OnIndustry2IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Industry2Id;
        partial void OnIndustry2IdChanging(Nullable<global::System.Int32> value);
        partial void OnIndustry2IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusId;
        partial void OnStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApproverId
        {
            get
            {
                return _ApproverId;
            }
            set
            {
                OnApproverIdChanging(value);
                ReportPropertyChanging("ApproverId");
                _ApproverId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproverId");
                OnApproverIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ApproverId;
        partial void OnApproverIdChanging(Nullable<global::System.Int32> value);
        partial void OnApproverIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NotifySalesId
        {
            get
            {
                return _NotifySalesId;
            }
            set
            {
                OnNotifySalesIdChanging(value);
                ReportPropertyChanging("NotifySalesId");
                _NotifySalesId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotifySalesId");
                OnNotifySalesIdChanged();
            }
        }
        private Nullable<global::System.Int32> _NotifySalesId;
        partial void OnNotifySalesIdChanging(Nullable<global::System.Int32> value);
        partial void OnNotifySalesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SpecializationId
        {
            get
            {
                return _SpecializationId;
            }
            set
            {
                OnSpecializationIdChanging(value);
                ReportPropertyChanging("SpecializationId");
                _SpecializationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecializationId");
                OnSpecializationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SpecializationId;
        partial void OnSpecializationIdChanging(Nullable<global::System.Int32> value);
        partial void OnSpecializationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProvinceId
        {
            get
            {
                return _ProvinceId;
            }
            set
            {
                OnProvinceIdChanging(value);
                ReportPropertyChanging("ProvinceId");
                _ProvinceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProvinceId");
                OnProvinceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProvinceId;
        partial void OnProvinceIdChanging(Nullable<global::System.Int32> value);
        partial void OnProvinceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChinaRegion
        {
            get
            {
                return _ChinaRegion;
            }
            set
            {
                OnChinaRegionChanging(value);
                ReportPropertyChanging("ChinaRegion");
                _ChinaRegion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChinaRegion");
                OnChinaRegionChanged();
            }
        }
        private global::System.String _ChinaRegion;
        partial void OnChinaRegionChanging(global::System.String value);
        partial void OnChinaRegionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="Setting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Setting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Setting object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        public static Setting CreateSetting(global::System.String name)
        {
            Setting setting = new Setting();
            setting.Name = name;
            return setting;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="SFDCStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SFDCStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SFDCStatus object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SFDCStatus CreateSFDCStatus(global::System.Int32 id, global::System.String name)
        {
            SFDCStatus sFDCStatus = new SFDCStatus();
            sFDCStatus.Id = id;
            sFDCStatus.Name = name;
            return sFDCStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_SFDCStatus", "Deal")]
        public EntityCollection<Deal> Deals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deal>("COATModel.FK_Deal_SFDCStatus", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deal>("COATModel.FK_Deal_SFDCStatus", "Deal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="Specialization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Specialization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Specialization object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Specialization CreateSpecialization(global::System.Int32 id)
        {
            Specialization specialization = new Specialization();
            specialization.Id = id;
            return specialization;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ORPName
        {
            get
            {
                return _ORPName;
            }
            set
            {
                OnORPNameChanging(value);
                ReportPropertyChanging("ORPName");
                _ORPName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ORPName");
                OnORPNameChanged();
            }
        }
        private global::System.String _ORPName;
        partial void OnORPNameChanging(global::System.String value);
        partial void OnORPNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> SalesCare
        {
            get
            {
                return _SalesCare;
            }
            set
            {
                OnSalesCareChanging(value);
                ReportPropertyChanging("SalesCare");
                _SalesCare = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalesCare");
                OnSalesCareChanged();
            }
        }
        private Nullable<global::System.Boolean> _SalesCare;
        partial void OnSalesCareChanging(Nullable<global::System.Boolean> value);
        partial void OnSalesCareChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_Specialization", "Deal")]
        public EntityCollection<Deal> Deals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deal>("COATModel.FK_Deal_Specialization", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deal>("COATModel.FK_Deal_Specialization", "Deal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="Status")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Status : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Status object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Status CreateStatus(global::System.Int32 id)
        {
            Status status = new Status();
            status.Id = id;
            return status;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActionName
        {
            get
            {
                return _ActionName;
            }
            set
            {
                OnActionNameChanging(value);
                ReportPropertyChanging("ActionName");
                _ActionName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActionName");
                OnActionNameChanged();
            }
        }
        private global::System.String _ActionName;
        partial void OnActionNameChanging(global::System.String value);
        partial void OnActionNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_Status", "Deal")]
        public EntityCollection<Deal> Deals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deal>("COATModel.FK_Deal_Status", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deal>("COATModel.FK_Deal_Status", "Deal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="SystemRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SystemRole object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SystemRole CreateSystemRole(global::System.Int32 id, global::System.String name)
        {
            SystemRole systemRole = new SystemRole();
            systemRole.Id = id;
            systemRole.Name = name;
            return systemRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_User_SystemRole", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("COATModel.FK_User_SystemRole", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("COATModel.FK_User_SystemRole", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="businessRoleId">Initial value of the BusinessRoleId property.</param>
        /// <param name="systemRoleId">Initial value of the SystemRoleId property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String name, global::System.String email, global::System.String password, global::System.Int32 businessRoleId, global::System.Int32 systemRoleId)
        {
            User user = new User();
            user.Id = id;
            user.Name = name;
            user.Email = email;
            user.Password = password;
            user.BusinessRoleId = businessRoleId;
            user.SystemRoleId = systemRoleId;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BusinessRoleId
        {
            get
            {
                return _BusinessRoleId;
            }
            set
            {
                OnBusinessRoleIdChanging(value);
                ReportPropertyChanging("BusinessRoleId");
                _BusinessRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessRoleId");
                OnBusinessRoleIdChanged();
            }
        }
        private global::System.Int32 _BusinessRoleId;
        partial void OnBusinessRoleIdChanging(global::System.Int32 value);
        partial void OnBusinessRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemRoleId
        {
            get
            {
                return _SystemRoleId;
            }
            set
            {
                OnSystemRoleIdChanging(value);
                ReportPropertyChanging("SystemRoleId");
                _SystemRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SystemRoleId");
                OnSystemRoleIdChanged();
            }
        }
        private global::System.Int32 _SystemRoleId;
        partial void OnSystemRoleIdChanging(global::System.Int32 value);
        partial void OnSystemRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDelete
        {
            get
            {
                return _IsDelete;
            }
            set
            {
                OnIsDeleteChanging(value);
                ReportPropertyChanging("IsDelete");
                _IsDelete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDelete");
                OnIsDeleteChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDelete;
        partial void OnIsDeleteChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeleteChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_ApprovalHistory_User", "ApprovalHistory")]
        public EntityCollection<ApprovalHistory> ApprovalHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApprovalHistory>("COATModel.FK_ApprovalHistory_User", "ApprovalHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApprovalHistory>("COATModel.FK_ApprovalHistory_User", "ApprovalHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_User_BusinessRole", "BusinessRole")]
        public BusinessRole BusinessRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessRole>("COATModel.FK_User_BusinessRole", "BusinessRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessRole>("COATModel.FK_User_BusinessRole", "BusinessRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessRole> BusinessRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessRole>("COATModel.FK_User_BusinessRole", "BusinessRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessRole>("COATModel.FK_User_BusinessRole", "BusinessRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_ModifiedHistory_User", "ModifiedHistory")]
        public EntityCollection<ModifiedHistory> ModifiedHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ModifiedHistory>("COATModel.FK_ModifiedHistory_User", "ModifiedHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ModifiedHistory>("COATModel.FK_ModifiedHistory_User", "ModifiedHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_User_SystemRole", "SystemRole")]
        public SystemRole SystemRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemRole>("COATModel.FK_User_SystemRole", "SystemRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemRole>("COATModel.FK_User_SystemRole", "SystemRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SystemRole> SystemRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemRole>("COATModel.FK_User_SystemRole", "SystemRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SystemRole>("COATModel.FK_User_SystemRole", "SystemRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_Approver", "Deal")]
        public EntityCollection<Deal> ApproverDeals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deal>("COATModel.FK_Deal_Approver", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deal>("COATModel.FK_Deal_Approver", "Deal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_Notifier", "Deal")]
        public EntityCollection<Deal> NotifierDeals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deal>("COATModel.FK_Deal_Notifier", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deal>("COATModel.FK_Deal_Notifier", "Deal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_Assigner", "Deal")]
        public EntityCollection<Deal> Deals1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deal>("COATModel.FK_Deal_Assigner", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deal>("COATModel.FK_Deal_Assigner", "Deal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("COATModel", "FK_Deal_Director", "Deal")]
        public EntityCollection<Deal> Deals2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deal>("COATModel.FK_Deal_Director", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deal>("COATModel.FK_Deal_Director", "Deal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="COATModel", Name="UserView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserView object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="bRole">Initial value of the BRole property.</param>
        /// <param name="sRole">Initial value of the SRole property.</param>
        public static UserView CreateUserView(global::System.Int32 id, global::System.String name, global::System.String email, global::System.String password, global::System.String bRole, global::System.String sRole)
        {
            UserView userView = new UserView();
            userView.Id = id;
            userView.Name = name;
            userView.Email = email;
            userView.Password = password;
            userView.BRole = bRole;
            userView.SRole = sRole;
            return userView;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                if (_Email != value)
                {
                    OnEmailChanging(value);
                    ReportPropertyChanging("Email");
                    _Email = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Email");
                    OnEmailChanged();
                }
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                if (_Password != value)
                {
                    OnPasswordChanging(value);
                    ReportPropertyChanging("Password");
                    _Password = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Password");
                    OnPasswordChanged();
                }
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDelete
        {
            get
            {
                return _IsDelete;
            }
            set
            {
                OnIsDeleteChanging(value);
                ReportPropertyChanging("IsDelete");
                _IsDelete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDelete");
                OnIsDeleteChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDelete;
        partial void OnIsDeleteChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BRole
        {
            get
            {
                return _BRole;
            }
            set
            {
                if (_BRole != value)
                {
                    OnBRoleChanging(value);
                    ReportPropertyChanging("BRole");
                    _BRole = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BRole");
                    OnBRoleChanged();
                }
            }
        }
        private global::System.String _BRole;
        partial void OnBRoleChanging(global::System.String value);
        partial void OnBRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SRole
        {
            get
            {
                return _SRole;
            }
            set
            {
                if (_SRole != value)
                {
                    OnSRoleChanging(value);
                    ReportPropertyChanging("SRole");
                    _SRole = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SRole");
                    OnSRoleChanged();
                }
            }
        }
        private global::System.String _SRole;
        partial void OnSRoleChanging(global::System.String value);
        partial void OnSRoleChanged();

        #endregion

    
    }

    #endregion

    
}
